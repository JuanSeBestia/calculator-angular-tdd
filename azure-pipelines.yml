# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

name: $(Date:yyyyMMdd)$(Rev:.r)

trigger:
  - master
  - develop
  - feature/*

variables:
  buildConfiguration: 'Release'

pool:
  vmImage: 'ubuntu-latest'

stages:
  - stage: Build
    jobs:
    - job: BuildJob
      steps:
      - template: azure/templates/install_packages.yml  # Template of build
      - task: Npm@1
        displayName: 'Build proyect'
        inputs:
          command: custom
          customCommand: run build -- --prod
      - task: PublishPipelineArtifact@0
        inputs:
          artifactName: 'calculator-tdd-anuglar'
          targetPath: 'www'
      
  - stage: Test
    jobs:
    - job: Test_Lint
      steps:
      - template: azure/templates/install_packages.yml  # Template of build
      - task: Npm@1
        displayName: 'Checkl lint'
        inputs:
          command: custom
          customCommand: run check-lint
    - job: Test_Unit
      steps:
      - template: azure/templates/install_packages.yml  # Template of build
      - task: Npm@1
        displayName: 'Test Angular'
        inputs:
          command: custom
          customCommand: run test -- --watch=false --code-coverage

      # Publish tests
      - task: PublishCodeCoverageResults@1
        displayName: 'Publish code coverage Angular results'
        condition: succeededOrFailed()
        inputs:
          codeCoverageTool: Cobertura
          summaryFileLocation: 'coverage/cobertura-coverage.xml'
          reportDirectory: coverage
          failIfCoverageEmpty: true

      - task: PublishTestResults@2
        displayName: 'Publish Angular test results'
        condition: succeededOrFailed()
        inputs:
          searchFolder: $(System.DefaultWorkingDirectory)/src/angular7/junit
          testRunTitle: Angular
          testResultsFormat: JUnit
          testResultsFiles: "**/TESTS*.xml"
      
      - task: DeleteFiles@1
        displayName: 'Delete JUnit files'
        inputs:
          SourceFolder: src/angular7/junit
          Contents: 'TESTS*.xml'


    - job: Test_E2E
      steps:
      - template: azure/templates/install_packages.yml  # Template of build
      # - task: Npm@1
      #   displayName: 'Run Unit Tests'
      #   inputs:
      #     command: custom
      #     customCommand: run e2e
      # - script: npm run e2e
  - stage: Deploy
    jobs:
    - job: Deploy
      steps:
      - script: echo Deploying the code!